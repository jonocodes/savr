/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SubmitRouteImport } from './routes/submit'
import { Route as ShareHandlerRouteImport } from './routes/share-handler'
import { Route as PrefsRouteImport } from './routes/prefs'
import { Route as DiagnosticsRouteImport } from './routes/diagnostics'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ArticleSlugRouteImport } from './routes/article.$slug'

const SubmitRoute = SubmitRouteImport.update({
  id: '/submit',
  path: '/submit',
  getParentRoute: () => rootRouteImport,
} as any)
const ShareHandlerRoute = ShareHandlerRouteImport.update({
  id: '/share-handler',
  path: '/share-handler',
  getParentRoute: () => rootRouteImport,
} as any)
const PrefsRoute = PrefsRouteImport.update({
  id: '/prefs',
  path: '/prefs',
  getParentRoute: () => rootRouteImport,
} as any)
const DiagnosticsRoute = DiagnosticsRouteImport.update({
  id: '/diagnostics',
  path: '/diagnostics',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ArticleSlugRoute = ArticleSlugRouteImport.update({
  id: '/article/$slug',
  path: '/article/$slug',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/diagnostics': typeof DiagnosticsRoute
  '/prefs': typeof PrefsRoute
  '/share-handler': typeof ShareHandlerRoute
  '/submit': typeof SubmitRoute
  '/article/$slug': typeof ArticleSlugRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/diagnostics': typeof DiagnosticsRoute
  '/prefs': typeof PrefsRoute
  '/share-handler': typeof ShareHandlerRoute
  '/submit': typeof SubmitRoute
  '/article/$slug': typeof ArticleSlugRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/diagnostics': typeof DiagnosticsRoute
  '/prefs': typeof PrefsRoute
  '/share-handler': typeof ShareHandlerRoute
  '/submit': typeof SubmitRoute
  '/article/$slug': typeof ArticleSlugRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/diagnostics'
    | '/prefs'
    | '/share-handler'
    | '/submit'
    | '/article/$slug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/diagnostics'
    | '/prefs'
    | '/share-handler'
    | '/submit'
    | '/article/$slug'
  id:
    | '__root__'
    | '/'
    | '/diagnostics'
    | '/prefs'
    | '/share-handler'
    | '/submit'
    | '/article/$slug'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DiagnosticsRoute: typeof DiagnosticsRoute
  PrefsRoute: typeof PrefsRoute
  ShareHandlerRoute: typeof ShareHandlerRoute
  SubmitRoute: typeof SubmitRoute
  ArticleSlugRoute: typeof ArticleSlugRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/submit': {
      id: '/submit'
      path: '/submit'
      fullPath: '/submit'
      preLoaderRoute: typeof SubmitRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/share-handler': {
      id: '/share-handler'
      path: '/share-handler'
      fullPath: '/share-handler'
      preLoaderRoute: typeof ShareHandlerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/prefs': {
      id: '/prefs'
      path: '/prefs'
      fullPath: '/prefs'
      preLoaderRoute: typeof PrefsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/diagnostics': {
      id: '/diagnostics'
      path: '/diagnostics'
      fullPath: '/diagnostics'
      preLoaderRoute: typeof DiagnosticsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/article/$slug': {
      id: '/article/$slug'
      path: '/article/$slug'
      fullPath: '/article/$slug'
      preLoaderRoute: typeof ArticleSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DiagnosticsRoute: DiagnosticsRoute,
  PrefsRoute: PrefsRoute,
  ShareHandlerRoute: ShareHandlerRoute,
  SubmitRoute: SubmitRoute,
  ArticleSlugRoute: ArticleSlugRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
